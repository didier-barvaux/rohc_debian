.\" File automatically generated by doxy2man0.1
.\" Generation date: dim. sept. 7 2014
.TH rohc_decomp_get_last_packet_info 3 2014-09-07 "ROHC" "ROHC library Programmer's Manual"
.SH "NAME"
rohc_decomp_get_last_packet_info \- Get some information about the last decompressed packet.
.SH SYNOPSIS
.nf
.B #include <rohc/rohc_decomp.h>
.sp
\fBbool rohc_decomp_get_last_packet_info\fP(
    \fBconst struct rohc_decomp *const        decomp\fP,
    \fBrohc_decomp_last_packet_info_t *const  info\fP
);
.fi
.SH DESCRIPTION
.PP 
Get some information about the last decompressed packet.
.PP 
To use the function, call it with a pointer on a pre-allocated rohc_decomp_last_packet_info_t structure with the \fBversion_major\fP and \fBversion_minor\fP fields set to one of the following supported versions:
.PP 
.RS
.PP 
\(bu Major 0, minor 0
.PP 
\(bu Major 0, minor 1
.PP 
.RE
.PP 
See rohc_decomp_last_packet_info_t for details about fields that are supported in the above versions.
.SH PARAMETERS
.TP
.B decomp
The ROHC decompressor to get information from 
.TP
.B info [input, output]
The structure where information will be stored 
.SH STRUCTURES
.SS "Some information about the last decompressed packet"
.PP
.sp
.PP 
The structure is used by the \fBrohc_decomp_get_last_packet_info\fP function to store some information about the last decompressed packet.
.PP 
Versioning works as follow:
.PP 
.RS
.PP 
\(bu The \fBversion_major\fP field defines the compatibility level. If the major number given by user does not match the one expected by the library, an error is returned.
.PP 
\(bu The \fBversion_minor\fP field defines the extension level. If the minor number given by user does not match the one expected by the library, only the fields supported in that minor version will be filled by \fBrohc_decomp_get_last_packet_info\fP.
.PP 
.RE
.PP 
Notes for developers:
.PP 
.RS
.PP 
\(bu Increase the major version if a field is removed.
.PP 
\(bu Increase the major version if a field is added at the beginning or in the middle of the structure.
.PP 
\(bu Increase the minor version if a field is added at the very end of the structure.
.PP 
\(bu The version_major and version_minor fields must be located at the very beginning of the structure.
.PP 
\(bu The structure must be packed.
.PP 
.RE
.PP 
Supported versions:
.PP 
.RS
.PP 
\(bu Major 0 / Minor 0 contains: version_major, version_minor, context_mode, context_state, profile_id, nr_lost_packets, nr_misordered_packets, and is_duplicated
.PP 
\(bu Major 0 / Minor = 1 added: corrected_crc_failures, corrected_sn_wraparounds, corrected_wrong_sn_updates, and packet_type
.PP 
.RE
.sp
.RS
.nf
struct \fBrohc_decomp_last_packet_info_t\fP {
  unsigned short      \fIversion_major\fP;              /* The major version of this structure */
  unsigned short      \fIversion_minor\fP;              /* The minor version of this structure */
  rohc_mode_t         \fIcontext_mode\fP;               /* The mode of the last context used by the compressor */
  rohc_decomp_state_t \fIcontext_state\fP;              /* The state of the last context used by the compressor */
  int                 \fIprofile_id\fP;                 /* The profile ID of the last context used by the compressor */
  unsigned long       \fInr_lost_packets\fP;            /* The number of (possible) lost packet(s) before last packet */
  unsigned long       \fInr_misordered_packets\fP;      /* The number of packet(s) before the last packet if late */
  bool                \fIis_duplicated\fP;              /* Is last packet a (possible) duplicated packet? */
  unsigned long       \fIcorrected_crc_failures\fP;     /* The number of successful corrections upon CRC failure */
  unsigned long       \fIcorrected_sn_wraparounds\fP;   /* The number of successful corrections of SN wraparound upon CRC failure */
  unsigned long       \fIcorrected_wrong_sn_updates\fP; /* The number of successful corrections of incorrect SN updates upon CRC failure */
  rohc_packet_t       \fIpacket_type\fP;                /* The type of the last decompressed ROHC packet */
};
.fi
.RE
.SH RETURN VALUE
.PP
true in case of success, false otherwise
.SH SEE ALSO
.BR rohc_decomp.h (3),
.BR rohc_decomp_last_packet_info_t (3)
