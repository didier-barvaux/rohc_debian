.\" File automatically generated by doxy2man0.1
.\" Generation date: dim. juin 19 2016
.TH rohc_comp_get_last_packet_info2 3 2016-06-19 "ROHC" "ROHC library Programmer's Manual"
.SH "NAME"
rohc_comp_get_last_packet_info2 \- Get some information about the last compressed packet.
.SH SYNOPSIS
.nf
.B #include <rohc/rohc_comp.h>
.sp
\fBbool rohc_comp_get_last_packet_info2\fP(
    \fBconst struct rohc_comp *const         comp\fP,
    \fBrohc_comp_last_packet_info2_t *const  info\fP
);
.fi
.SH DESCRIPTION
.PP 
Get some information about the last compressed packet.
.PP 
To use the function, call it with a pointer on a pre\-allocated rohc_comp_last_packet_info2_t structure with the \fBversion_major\fP and \fBversion_minor\fP fields set to one of the following supported versions:
.PP 
.RS
.PP 
\(bu Major 0, minor 0
.PP 
.RE
.PP 
See the rohc_comp_last_packet_info2_t structure for details about fields that are supported in the above versions.
.SH PARAMETERS
.TP
.B comp
The ROHC compressor to get information from 
.TP
.B info [input, output]
The structure where information will be stored 
.SH STRUCTURES
.SS "Some information about the last compressed packet"
.PP
.sp
.PP 
The structure is used by the \fBrohc_comp_get_last_packet_info2\fP function to store some information about the last compressed packet.
.PP 
Versioning works as follow:
.PP 
.RS
.PP 
\(bu The \fBversion_major\fP field defines the compatibility level. If the major number given by user does not match the one expected by the library, an error is returned.
.PP 
\(bu The \fBversion_minor\fP field defines the extension level. If the minor number given by user does not match the one expected by the library, only the fields supported in that minor version will be filled by \fBrohc_comp_get_last_packet_info2\fP.
.PP 
.RE
.PP 
Notes for developers:
.PP 
.RS
.PP 
\(bu Increase the major version if a field is removed.
.PP 
\(bu Increase the major version if a field is added at the beginning or in the middle of the structure.
.PP 
\(bu Increase the minor version if a field is added at the very end of the structure.
.PP 
\(bu The version_major and version_minor fields must be located at the very beginning of the structure.
.PP 
\(bu The structure must be packed.
.PP 
.RE
.PP 
Supported versions:
.PP 
.RS
.PP 
\(bu Major 0 / Minor 0 contains: version_major, version_minor, context_id, is_context_init, context_mode, context_state, context_used, profile_id, packet_type, total_last_uncomp_size, header_last_uncomp_size, total_last_comp_size, and header_last_comp_size
.PP 
.RE
.sp
.RS
.nf
struct \fBrohc_comp_last_packet_info2_t\fP {
  unsigned short    \fIversion_major\fP;           /* The major version of this structure */
  unsigned short    \fIversion_minor\fP;           /* The minor version of this structure */
  unsigned int      \fIcontext_id\fP;              /* The Context ID (CID) */
  bool              \fIis_context_init\fP;         /* Whether the context was initialized (created/re-used) by the packet */
  rohc_mode_t       \fIcontext_mode\fP;            /* The mode of the last context used by the compressor */
  rohc_comp_state_t \fIcontext_state\fP;           /* The state of the last context used by the compressor */
  bool              \fIcontext_used\fP;            /* Whether the last context used by the compressor is still in use */
  int               \fIprofile_id\fP;              /* The profile ID of the last context used by the compressor */
  rohc_packet_t     \fIpacket_type\fP;             /* The type of ROHC packet created for the last compressed packet */
  unsigned long     \fItotal_last_uncomp_size\fP;  /* The uncompressed size (in bytes) of the last compressed packet */
  unsigned long     \fIheader_last_uncomp_size\fP; /* The uncompressed size (in bytes) of the last compressed header */
  unsigned long     \fItotal_last_comp_size\fP;    /* The compressed size (in bytes) of the last compressed packet */
  unsigned long     \fIheader_last_comp_size\fP;   /* The compressed size (in bytes) of the last compressed header */
};
.fi
.RE
.SH RETURN VALUE
.PP
true in case of success, false otherwise
.SH SEE ALSO
.BR rohc_comp.h (3),
.BR rohc_comp_last_packet_info2_t (3)
