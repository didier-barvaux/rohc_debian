.\" File automatically generated by doxy2man0.1
.\" Generation date: dim. juin 19 2016
.TH rohc_buf_avail_len 3 2016-06-19 "ROHC" "ROHC library Programmer's Manual"
.SH "NAME"
rohc_buf_avail_len \- How many bytes the given network buffer may contain?
.SH SYNOPSIS
.nf
.B #include <rohc/rohc.h>
.sp
\fBsize_t rohc_buf_avail_len\fP(
    \fBconst struct rohc_buf  buf\fP
);
.fi
.SH DESCRIPTION
.SH PARAMETERS
.TP
.B buf
The network buffer to check 
.SH STRUCTURES
.SS "A network buffer for the ROHC library"
.PP
.sp
.PP 
May represent one uncompressed packet, one ROHC packet, or a ROHC feedback.
.PP 
The network buffer does not contain the packet data itself. It only has a pointer on it. This is designed this way for performance reasons: no copy required to initialize a network buffer, the struct is small and may be passed as copy to function.
.PP 
The network buffer is able to keep some free space at its beginning. The unused space at the beginning of the buffer may be used to prepend a network header at the very end of the packet handling.
.PP 
The beginning of the network buffer may also be shifted forward with the \fBrohc_buf_pull\fP function or shifted backward with the \fBrohc_buf_push\fP function. This is useful when parsing a network packet (once bytes are read, shift them forward) for example.
.PP 
The network buffer may be initialized manually (see below) or with the helper functions \fBrohc_buf_init_empty\fP or \fBrohc_buf_init_full\fP...
.PP 
 
.sp
.RS
.nf
struct \fBrohc_buf\fP {
  struct rohc_ts \fItime\fP;    /* The timestamp associated to the data */
  uint8_t       *\fIdata\fP;    /* The buffer data */
  size_t         \fImax_len\fP; /* The maximum length of the buffer */
  size_t         \fIoffset\fP;  /* The offset for the beginning of the data */
  size_t         \fIlen\fP;     /* The data length (in bytes) */
};
.fi
.RE
.SH RETURN VALUE
.PP
The number of bytes one may write to the given network buffer 
.SH SEE ALSO
.BR rohc.h (3)
