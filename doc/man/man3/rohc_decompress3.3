.\" File automatically generated by doxy2man0.1
.\" Generation date: dim. juin 19 2016
.TH rohc_decompress3 3 2016-06-19 "ROHC" "ROHC library Programmer's Manual"
.SH "NAME"
rohc_decompress3 \- Decompress the given ROHC packet into one uncompressed packet.
.SH SYNOPSIS
.nf
.B #include <rohc/rohc_decomp.h>
.sp
\fBrohc_status_t rohc_decompress3\fP(
    \fBstruct rohc_decomp *const  decomp\fP,
    \fBconst struct rohc_buf      rohc_packet\fP,
    \fBstruct rohc_buf *const     uncomp_packet\fP,
    \fBstruct rohc_buf *const     rcvd_feedback\fP,
    \fBstruct rohc_buf *const     feedback_send\fP
);
.fi
.SH DESCRIPTION
.PP 
Decompress the given ROHC packet into an uncompressed packet. The decompression always returns ROHC_OK in case of success. The caller shall however be ready to handle several cases: 
.PP 
.RS
.PP 
\(bu the uncompressed packet \fBuncomp_packet\fP might be empty if the ROHC packet contained only feedback data or if the ROHC packet was not a final segment 
.PP 
\(bu the received feedback \fBrcvd_feedback\fP might be empty if the ROHC packet doesn't contain at least one feedback item
.PP 
.RE
.PP 
If \fBfeedback_send\fP is not NULL, the decompression may return some feedback information on it. In such a case, the caller is responsible to send it to the compressor through any feedback channel.
.PP 
Time\-related features in the ROHC protocol: set the \fBrohc_packet.time\fP parameter to 0 if arrival time of the ROHC packet is unknown or to disable the time\-related features in the ROHC protocol.
.SH PARAMETERS
.TP
.B decomp
The ROHC decompressor 
.TP
.B rohc_packet
The compressed packet to decompress 
.TP
.B uncomp_packet [output]
The resulting uncompressed packet 
.TP
.B rcvd_feedback [output]
The feedback received from the remote peer for the same\-side associated ROHC compressor through the feedback channel: 
.RS

\(bu If NULL, ignore the received feedback data 

\(bu If not NULL, store the received feedback in at the given address 


.RE
.TP
.B feedback_send [output]
The feedback to be transmitted to the remote compressor through the feedback channel: 
.RS

\(bu If NULL, the decompression won't generate feedback information for its compressor 

\(bu If not NULL, may store the generated feedback at the given address 


.RE
.SH STRUCTURES
.SS "A network buffer for the ROHC library"
.PP
.sp
.PP 
May represent one uncompressed packet, one ROHC packet, or a ROHC feedback.
.PP 
The network buffer does not contain the packet data itself. It only has a pointer on it. This is designed this way for performance reasons: no copy required to initialize a network buffer, the struct is small and may be passed as copy to function.
.PP 
The network buffer is able to keep some free space at its beginning. The unused space at the beginning of the buffer may be used to prepend a network header at the very end of the packet handling.
.PP 
The beginning of the network buffer may also be shifted forward with the \fBrohc_buf_pull\fP function or shifted backward with the \fBrohc_buf_push\fP function. This is useful when parsing a network packet (once bytes are read, shift them forward) for example.
.PP 
The network buffer may be initialized manually (see below) or with the helper functions \fBrohc_buf_init_empty\fP or \fBrohc_buf_init_full\fP...
.PP 
 
.sp
.RS
.nf
struct \fBrohc_buf\fP {
  struct rohc_ts \fItime\fP;    /* The timestamp associated to the data */
  uint8_t       *\fIdata\fP;    /* The buffer data */
  size_t         \fImax_len\fP; /* The maximum length of the buffer */
  size_t         \fIoffset\fP;  /* The offset for the beginning of the data */
  size_t         \fIlen\fP;     /* The data length (in bytes) */
};
.fi
.RE
.SH RETURN VALUE
.PP
Possible return values: 
.RS

\(bu \fBROHC_STATUS_OK\fP if a decompressed packet is returned 

\(bu \fBROHC_STATUS_NO_CONTEXT\fP if no decompression context matches the CID stored in the given ROHC packet and the ROHC packet is not an IR packet 

\(bu \fBROHC_STATUS_OUTPUT_TOO_SMALL\fP if the output buffer is too small for the compressed packet 

\(bu \fBROHC_STATUS_MALFORMED\fP if the decompression failed because the ROHC packet is malformed 

\(bu \fBROHC_STATUS_BAD_CRC\fP if the CRC detected a transmission or decompression problem 

\(bu \fBROHC_STATUS_ERROR\fP if another problem occurred


.RE


.SH EXAMPLE
.nf
struct rohc_decomp *decompressor;       /* the ROHC decompressor */
/* the buffer that will contain the ROHC packet to decompress */
unsigned char rohc_buffer[BUFFER_SIZE];
struct rohc_buf rohc_packet = rohc_buf_init_empty(rohc_buffer, BUFFER_SIZE);
/* the buffer that will contain the resulting IP packet */
unsigned char ip_buffer[BUFFER_SIZE];
struct rohc_buf ip_packet = rohc_buf_init_empty(ip_buffer, BUFFER_SIZE);
/* we do not want to handle feedback in this simple example */
struct rohc_buf *rcvd_feedback = NULL;
struct rohc_buf *feedback_send = NULL;

status = rohc_decompress3(decompressor, rohc_packet, &ip_packet,
                          rcvd_feedback, feedback_send);
if(status == ROHC_STATUS_OK)
{
        /* decompression is successful */
        if(!rohc_buf_is_empty(ip_packet))
        {
                /* ip_packet.len bytes of decompressed IP data available in
                 * ip_packet: dump the IP packet on the standard output */
                printf("IP packet resulting from the ROHC decompression:\n");
                dump_packet(ip_packet);
        }
        else
        {
                /* no IP packet was decompressed because of ROHC segmentation or
                 * feedback\-only packet:
                 *  \- the ROHC packet was a non\-final segment, so at least another
                 *    ROHC segment is required to be able to decompress the full
                 *    ROHC packet
                 *  \- the ROHC packet was a feedback\-only packet, it contained only
                 *    feedback information, so there was nothing to decompress */
                printf("no IP packet decompressed");
        }
}
else
{
        /* failure: decompressor failed to decompress the ROHC packet */
        fprintf(stderr, "decompression of fake ROHC packet failed\n");
}



.fi
.SH SEE ALSO
.BR rohc_decomp.h (3),
.BR ROHC_STATUS_OK (3),
.BR ROHC_STATUS_NO_CONTEXT (3),
.BR ROHC_STATUS_OUTPUT_TOO_SMALL (3),
.BR ROHC_STATUS_MALFORMED (3),
.BR ROHC_STATUS_BAD_CRC (3),
.BR ROHC_STATUS_ERROR (3),
.BR rohc_decomp_set_mrru (3)
